1
00:00:49.3 --> 00:00:53.4
That's why we need to add a carriage return and a line feed

2
00:00:53.6 --> 00:00:59.5
character into the negated character class, and now we'll

3
00:00:59.6 --> 00:01:02.0
get the matches that we want to extract.

4
00:01:03.2 --> 00:01:06.4
Let's make sure we capture the text between the square brackets

5
00:01:07.1 --> 00:01:11.5
by adding a pair of unescaped parentheses that will form

6
00:01:11.6 --> 00:01:13.0
a capturing group in our pattern.

7
00:01:14.1 --> 00:01:18.1
Now let's clear all our marks and switch to the "Replace" tab.

8
00:01:19.1 --> 00:01:21.8
Here, you see that I already populated the "Replace with"

9
00:01:22.0 --> 00:01:24.7
field with a backreference to Group 1 value.

10
00:01:25.3 --> 00:01:25.9
This is not enough.

11
00:01:27.0 --> 00:01:29.8
If you know there is a single match per line, you could just

12
00:01:29.9 --> 00:01:36.4
enclose our pattern with greedy dot patterns and hit "Replace all".

13
00:01:36.4 --> 00:01:43.9
You can see that Line 1, Line 4 and Line 5 now

14
00:01:44.1 --> 00:01:45.6
look different.

15
00:01:45.8 --> 00:01:49.7
On Line 1, however, you can only see "ghi" value.

16
00:01:50.5 --> 00:01:52.6
That was the last match on this line.

17
00:01:53.9 --> 00:01:59.0
Let's hit CTRL-Z and you see it was really the last value

18
00:01:59.3 --> 00:02:05.1
on this line that matched our pattern and the rest, "def" and

19
00:02:05.2 --> 00:02:06.9
"abc", got deleted.

20
00:02:09.0 --> 00:02:12.5
If you know that you need just the first value, you could

21
00:02:12.7 --> 00:02:16.9
make the first greedy dot lazy by adding a question mark

22
00:02:17.0 --> 00:02:21.0
after the asterisk and when you hit "Replace all" the first line

23
00:02:21.2 --> 00:02:22.1
value is "abc".

24
00:02:23.0 --> 00:02:25.9
Now what can you do to keep all matches?

25
00:02:27.6 --> 00:02:31.8
Let's hit CTRL-Z and use the conditional replacement pattern

26
00:02:32.3 --> 00:02:35.2
Before we can use the conditional replacement pattern, we

27
00:02:35.3 --> 00:02:39.3
need to make sure our pattern actually matches all characters

28
00:02:39.5 --> 00:02:40.3
in our document.

29
00:02:42.1 --> 00:02:46.0
And to do this, we need to use the pattern that matches our

30
00:02:46.4 --> 00:02:49.7
texts in between square brackets capturing the text in between

31
00:02:50.0 --> 00:02:55.6
the outer brackets first, or any other character.

32
00:02:56.0 --> 00:02:58.9
Make sure that the ". matches newline" option is enabled

33
00:02:59.2 --> 00:03:00.6
in the search and replace dialog.

34
00:03:01.6 --> 00:03:04.5
The replacement now should look like this.

35
00:03:05.3 --> 00:03:09.8
If Group 1 matches, the replacement is Group 1 value

36
00:03:10.6 --> 00:03:12.1
plus a newline.

37
00:03:13.7 --> 00:03:15.9
Else, we replace with an empty string.

38
00:03:17.6 --> 00:03:23.3
That means we just remove the matches if the dot matches. Here.

39
00:03:24.4 --> 00:03:25.1
Now let's test it.

40
00:03:27.1 --> 00:03:30.9
We've got all our expected matches on separate lines.

41
00:03:32.5 --> 00:03:34.6
If you want to read more about similar issues and get more

42
00:03:34.7 --> 00:03:37.3
familiar with the constructs used in this video, please feel

43
00:03:37.4 --> 00:03:39.3
free to follow the links in the FURTHER LINKS section.

44
00:03:40.1 --> 00:03:42.3
If you liked my video, please click "Like" and subscribe to

45
00:03:42.4 --> 00:03:43.6
my channel if you haven't done it yet.

46
00:03:44.3 --> 00:03:46.0
Thank you for watching and happy regexing.
