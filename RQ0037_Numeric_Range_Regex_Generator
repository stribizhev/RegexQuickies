1
00:00:04.7 --> 00:00:05.0
Hello.

2
00:00:05.1 --> 00:00:06.4
Today we'll speak about matching

3
00:00:06.5 --> 00:00:08.8
numeric ranges with regular expressions.

4
00:00:09.4 --> 00:00:11.5
When this problem arises, we usually

5
00:00:11.6 --> 00:00:14.9
use numeric range regex generators.

6
00:00:15.1 --> 00:00:16.9
So, let's match days of the

7
00:00:16.9 --> 00:00:19.9
year, 1 through 365.

8
00:00:20.3 --> 00:00:21.5
I will show you how to do

9
00:00:21.5 --> 00:00:24.7
it using my numeric range regex generator.

10
00:00:25.2 --> 00:00:29.1
Let's go to the StackOverflow post that is

11
00:00:29.2 --> 00:00:32.3
called "How to match numbers between X and Y with regexp?"

12
00:00:33.3 --> 00:00:35.3
Now, scroll down to the

13
00:00:35.3 --> 00:00:37.9
numeric range regex generator post.

14
00:00:38.3 --> 00:00:41.0
Scroll down and here you will

15
00:00:41.0 --> 00:00:42.8
see "Run code snippet" button.

16
00:00:43.5 --> 00:00:47.4
Click it and you'll see that we can

17
00:00:47.5 --> 00:00:51.8
generate numeric range regexps right here.

18
00:00:52.1 --> 00:00:58.2
So 1 and 365 are already filled in and all

19
00:00:58.2 --> 00:01:01.1
you need now is to make sure you select

20
00:01:01.1 --> 00:01:04.4
the right option that you need and click "Generate".

21
00:01:05.9 --> 00:01:07.7
When the regex is generated, it

22
00:01:07.7 --> 00:01:10.7
appears right below the "Generate" button.

23
00:01:11.2 --> 00:01:16.2
Copy it and let's test.

24
00:01:16.3 --> 00:01:18.8
It doesn't work really nice because as you see

25
00:01:18.9 --> 00:01:21.8
it matches "1" and "4" in "14".

26
00:01:22.4 --> 00:01:28.4
"1", "9", "9" are three different matches in 199.

27
00:01:29.2 --> 00:01:32.8
So let's go back. Here,

28
00:01:32.8 --> 00:01:35.6
you see that we can use the "Match

29
00:01:35.6 --> 00:01:39.2
whole string" option in order to match the

30
00:01:39.2 --> 00:01:40.9
whole string with this regular expression.

31
00:01:41.0 --> 00:01:43.9
And you see that the anchors are added, this

32
00:01:44.0 --> 00:01:46.5
caret symbol that matches the start of string and

33
00:01:46.6 --> 00:01:50.8
this dollar symbol that matches the end of string.

34
00:01:51.0 --> 00:01:54.2
So, let's copy this regex and

35
00:01:54.3 --> 00:01:57.5
paste it in our regex fiddle.

36
00:01:57.9 --> 00:02:00.2
Now you can see that only

37
00:02:00.4 --> 00:02:04.0
whole line numbers are matched.

38
00:02:04.2 --> 00:02:06.8
But if you need to match these numbers here,

39
00:02:07.9 --> 00:02:11.8
you may use "Match within word boundaries" option.

40
00:02:12.3 --> 00:02:15.1
And you see there are word boundaries

41
00:02:15.2 --> 00:02:17.4
on both sides of the expression.

42
00:02:17.8 --> 00:02:21.8
Let's copy this regular expression and test it.

43
00:02:22.0 --> 00:02:25.0
You can see that we now have many more matches.

44
00:02:25.1 --> 00:02:29.5
Even "1", "14", "100", etc. are matched

45
00:02:29.6 --> 00:02:32.0
on the line with other words.

46
00:02:32.8 --> 00:02:37.2
However, you can see that 365 days are not

47
00:02:37.2 --> 00:02:41.6
matched because here "5" is glued to a letter.

48
00:02:42.7 --> 00:02:44.3
Let's check the other options.

49
00:02:45.3 --> 00:02:48.2
In this case we may want to match

50
00:02:48.2 --> 00:02:51.0
the number when it is not enclosed with digits.

51
00:02:51.4 --> 00:02:53.5
Let's generate a new regular expression.

52
00:02:53.5 --> 00:02:57.5
and you can see the digit boundary patterns here.

53
00:02:58.3 --> 00:03:02.3
This is a negative lookahead that matches a location

54
00:03:02.4 --> 00:03:05.6
that is not immediately followed with a digit

55
00:03:05.7 --> 00:03:09.3
and this is a lookbehind that matches a location

56
00:03:09.4 --> 00:03:12.1
that is not immediately preceded with a digit.

57
00:03:12.3 --> 00:03:16.8
So, let's copy this regular expression

58
00:03:18.4 --> 00:03:20.2
and see how it works.

59
00:03:21.3 --> 00:03:23.7
Now we can see that 365 is

60
00:03:23.7 --> 00:03:28.5
matched in the "365days" string.

61
00:03:29.5 --> 00:03:32.0
We can also see that "14" is matched in

62
00:03:32.1 --> 00:03:36.0
"iphone14pro" that is written without whitespaces.

63
00:03:36.4 --> 00:03:41.1
Alright, what if you don't want to match numbers that are

64
00:03:41.3 --> 00:03:46.3
followed with a comma or preceded with a comma or numbers

65
00:03:46.5 --> 00:03:53.1
that are preceded with a dot or a minus?

66
00:03:53.8 --> 00:03:56.1
In this case we would like to use

67
00:03:56.2 --> 00:04:00.5
whitespace boundaries so we can select this option:

68
00:04:00.5 --> 00:04:02.8
"Match when enclosed with whitespaces or

69
00:04:02.9 --> 00:04:07.1
start/end of string" - and generate a new regular expression.

70
00:04:07.3 --> 00:04:10.7
So, this is a leading white space boundary

71
00:04:10.7 --> 00:04:13.9
and this is a trailing whitespace boundary

72
00:04:14.0 --> 00:04:17.6
and the whole pattern works like this.

73
00:04:17.8 --> 00:04:19.0
Have a look.

74
00:04:19.3 --> 00:04:24.9
We only match numbers that have whitespaces or that

75
00:04:24.9 --> 00:04:29.9
are at the end of string as our matches.

76
00:04:31.6 --> 00:04:34.6
So, float numbers here are not matched

77
00:04:34.7 --> 00:04:37.5
and negative numbers are not matched.

78
00:04:38.4 --> 00:04:40.7
So there are other options as well.

79
00:04:40.9 --> 00:04:44.3
Let's check them. So, we can allow leading zeros.

80
00:04:45.1 --> 00:04:48.9
Now, let's generate this regular expression,

81
00:04:55.4 --> 00:04:58.7
and you can see that "01" is now matched.

82
00:05:00.8 --> 00:05:05.4
We can optionally match negative numbers by adding

83
00:05:07.3 --> 00:05:10.9
an optional hyphen or minus at the beginning.

84
00:05:16.5 --> 00:05:20.3
What if we also want to match fractions?

85
00:05:23.2 --> 00:05:26.4
We can select "Optionally match fractional digits (floats)"

86
00:05:30.4 --> 00:05:35.2
and you can see this optional non-capturing group

87
00:05:35.3 --> 00:05:38.8
that matches one or zero occurrences of

88
00:05:38.8 --> 00:05:41.5
a dot and one or more digits right after.

89
00:05:42.2 --> 00:05:44.1
Let's see how it works.

90
00:05:46.5 --> 00:05:47.8
And you can see that

91
00:05:47.9 --> 00:05:50.8
now we also match numbers with fractions.

92
00:05:51.5 --> 00:05:55.3
If you want to restrict the number of digits

93
00:05:55.4 --> 00:05:58.7
in the fractional part to say two, you need

94
00:05:58.8 --> 00:06:02.7
to replace "+" with a limiting quantifier.

95
00:06:03.8 --> 00:06:06.9
And the last number here is not matched.

96
00:06:07.5 --> 00:06:10.4
If you liked this video, please click "Like" and subscribe

97
00:06:10.5 --> 00:06:12.2
to my channel if you haven't done it yet.

98
00:06:12.3 --> 00:06:14.2
Thank you for watching and happy regexing.
