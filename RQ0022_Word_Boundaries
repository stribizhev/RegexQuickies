1
00:00:03.6 --> 00:00:04.6
Hello.

2
00:00:04.6 --> 00:00:07.8
In this video we are going to speak about such a common regex

3
00:00:07.8 --> 00:00:09.4
construct as a word boundary.

4
00:00:09.7 --> 00:00:12.9
A word boundary is a position at the beginning of the string

5
00:00:12.9 --> 00:00:17.1
if the first character is a word character. Word boundary

6
00:00:17.1 --> 00:00:20.3
also occurs after the last character in the string

7
00:00:20.4 --> 00:00:22.3
if the last character is a word character.

8
00:00:22.5 --> 00:00:27.2
Also, the word boundary occurs between two characters in

9
00:00:27.3 --> 00:00:30.8
the string where one of the characters is a word character

10
00:00:30.8 --> 00:00:33.0
and the other is not a word character.

11
00:00:33.1 --> 00:00:38.1
A word character is roughly a letter, digit or underscore.

12
00:00:38.3 --> 00:00:42.6
A non-word character is roughly a character other than a digit,

13
00:00:42.8 --> 00:00:44.1
letter or underscore.

14
00:00:44.9 --> 00:00:48.3
Now let's try and match a whole word "is".

15
00:00:48.7 --> 00:00:56.3
So if we just type "is" we'll match any "is" substring in any string.

16
00:00:56.3 --> 00:01:02.1
In order to make it a whole word match, we add word

17
00:01:02.2 --> 00:01:05.5
boundaries, "\b", on each side.

18
00:01:05.8 --> 00:01:07.4
You can see that we matched

19
00:01:07.4 --> 00:01:12.7
all "is" substrings on the first, second, and third line below

20
00:01:12.7 --> 00:01:14.5
the MATCH section title.

21
00:01:14.9 --> 00:01:18.8
If we take under consideration this first "is" we can see that

22
00:01:18.8 --> 00:01:21.2
it is located at the beginning of the line.

23
00:01:21.2 --> 00:01:24.7
It is preceded with a newline character (and a newline

24
00:01:24.7 --> 00:01:29.0
character is a non-word character) and this word is followed

25
00:01:29.0 --> 00:01:32.1
by comma (and comma is also a non-word character).

26
00:01:32.1 --> 00:01:37.7
Same happens with the second occurrence, a comma and hyphen are non-word

27
00:01:37.7 --> 00:01:41.8
characters. The exclamation mark is also a non-word character.

28
00:01:42.1 --> 00:01:47.7
A newline is a non-word character and space is also a non-word

29
00:01:47.7 --> 00:01:52.6
character. Now you can see that we didn't match "is" on the

30
00:01:52.6 --> 00:01:57.0
line with underscores and on the line where digits are glued

31
00:01:57.1 --> 00:01:57.9
to the letters.

32
00:01:58.5 --> 00:02:02.5
Now you remember that word boundaries are based on the distinction

33
00:02:02.5 --> 00:02:04.4
between word and non-word characters.

34
00:02:04.5 --> 00:02:07.8
Since word characters are not just letters, they also include

35
00:02:07.8 --> 00:02:08.9
digits and underscores,

36
00:02:09.1 --> 00:02:13.3
we need to be able to exclude either digits or underscores,

37
00:02:13.3 --> 00:02:15.5
or both from the word boundaries.

38
00:02:15.5 --> 00:02:19.0
In order to do that, we need to use lookarounds.

39
00:02:23.0 --> 00:02:27.3
That is, we can use a lookbehind that matches a position

40
00:02:27.5 --> 00:02:31.5
that is immediately preceded with an underscore or a word

41
00:02:31.5 --> 00:02:36.7
boundary, and we need to use a positive lookahead that matches

42
00:02:36.7 --> 00:02:40.7
a location that is immediately followed by an underscore

43
00:02:41.4 --> 00:02:42.6
or a word boundary.

44
00:02:42.6 --> 00:02:44.4
This is not the only solution.

45
00:02:46.3 --> 00:02:52.8
We can also use these two negative lookarounds that are basically

46
00:02:52.8 --> 00:02:57.7
the same, but you avoid using alternation inside them, thus

47
00:02:57.8 --> 00:03:00.5
making them a bit more efficient but a bit more cryptic.

48
00:03:00.7 --> 00:03:04.2
Okay, there is another test case left. Here,

49
00:03:04.2 --> 00:03:08.3
we've got the word "is" that is surrounded with both underscores

50
00:03:08.5 --> 00:03:10.0
and digits.

51
00:03:10.5 --> 00:03:16.7
So in order to exclude digits, we can just add "\d"

52
00:03:16.7 --> 00:03:22.6
in these negative lookarounds and we've got our two remaining matches.

53
00:03:22.6 --> 00:03:27.5
In order to match "is" substring not inside letters

54
00:03:27.5 --> 00:03:39.4
you can also use a much simpler pattern like... this.

55
00:03:39.7 --> 00:03:44.4
You just use the letter pattern in the lookarounds.

56
00:03:44.6 --> 00:03:57.9
You can also use a Unicode character class here like this.

57
00:03:57.9 --> 00:04:01.7
Now, there are a lot of other types of boundaries,

58
00:04:01.7 --> 00:04:03.5
for example, numeric boundaries.

59
00:04:04.0 --> 00:04:07.7
For example, if you want to match "4" but not the "4" in

60
00:04:08.1 --> 00:04:14.3
"143". So, you can see an example here.

61
00:04:16.3 --> 00:04:18.6
There are whitespace boundaries.

62
00:04:18.6 --> 00:04:22.4
Now, when you use word boundaries inside your code, make

63
00:04:22.4 --> 00:04:24.5
sure you escape the backslashes properly.

64
00:04:24.6 --> 00:04:26.2
In regular string literals,

65
00:04:26.2 --> 00:04:30.6
in order to define a single literal backslash, you need to

66
00:04:30.6 --> 00:04:31.7
use two backslashes.

67
00:04:31.7 --> 00:04:35.8
In most programming languages, you can use verbatim or raw

68
00:04:35.9 --> 00:04:40.1
string literals where backslashes are treated as normal characters.

69
00:04:40.4 --> 00:04:44.7
Please use those verbatim or raw string literals to define

70
00:04:44.7 --> 00:04:47.7
your regular expression patterns. That will help you avoid

71
00:04:47.7 --> 00:04:50.1
many other issues related to regular expressions.

72
00:04:51.2 --> 00:04:54.5
Remember that if you need help with code, you can always

73
00:04:54.6 --> 00:04:58.7
check the Code Generator page here at regex101.com.

74
00:04:59.5 --> 00:05:02.8
Now, you can see the explanation of the pattern on the right,

75
00:05:03.1 --> 00:05:06.6
you can read more about word boundaries by following the links

76
00:05:06.6 --> 00:05:07.7
in the FURTHER LINKS section,

77
00:05:07.7 --> 00:05:10.4
and if you liked my video, please click "Like" and subscribe

78
00:05:10.4 --> 00:05:11.1
to my channel

79
00:05:11.1 --> 00:05:14.0
if you haven't done it yet. Thank you for watching and

80
00:05:14.0 --> 00:05:14.6
happy regexing.
